include common : open;

msg io_open {
     type: 0x101;

     request open;
     reply {
          status: u16;
     }
}

msg close {
     type: 0x102;

     request {
          fd: fd;
          padd: u32;
     }

     reply {
          status: u16;
     }
}

msg handle {
     type: 0x109;

     request open;
     reply open;
}

msg read {
   type: 0x103;

   request {
        fd: fd;
        nbytes: u16;
        zero: u16; 
   }
   reply {
        status: u16;
        nbytes: u16 hex;
        zero: u16;
   }
}

msg write {
   type: 0x104;

   request {
        fd: fd;
        nbytes: u16;
        zero: u16; 
   }
   reply {
        status: u16;
        nbytes: u16 hex;
        zero: u16;
   }
}

msg lseek {
    type: 0x105;

    request {
        fd: fd;
        offset: i32;
        whence: u16;
        zero: u16;
    }
    reply {
        status: u16;
        zero: u16;
        offset: u32;
    }
}

struct stat {
     ino: u32;
     dev: u32;
     size: i32;
     rdev: u32;

     # see comments in original header
     userland_uid: u32;
     userland_gid: u32;    

     ftime: time;
     mtime: time;
     atime: time;
     ctime: time;
     padd: u16;

     mode: u16 oct;
     uid: u16;
     gid: u16;
     nlink: u16;

     padd: u32;
     padd: u8;
     status: u8;
}

msg stat {
     type: 0x115;

     request open;
     reply {
          status: u16;
          padd: u16;
          stat: stat;
     }
}

msg fstat {
     type: 0x10a;

     request {
          fd: u16;
          zero: u32;
     }

     reply {
          status: u16;
          padd: u16;
          stat: stat;
     }
}

msg readdir {
     type: 0x112;

     request {
          fd: u16;
          ndirs: u8;
          padd: u8;
          padd: u8;
          padd: u8;
     }

     reply {
          status: u16;
          ndirs: u8;
          padd: u8;
          padd: u32;
          # dirents follow
     }
}

msg rewinddir {
     type: 0x113;

     request {
          fd: u16;
     }

     reply {
          status: u16;
     }
}